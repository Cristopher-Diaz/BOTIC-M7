DROP DATABASE IF EXISTS m7_final_drilling;
CREATE DATABASE m7_final_drilling;
USE m7_final_drilling;

-- Crear tabla Usuario
CREATE TABLE Usuario (
    id_usuario INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL
);

-- Crear tabla Categoria
CREATE TABLE Categoria (
    id_categoria INT AUTO_INCREMENT PRIMARY KEY,
    nombre_categoria VARCHAR(50) NOT NULL
);

-- Crear tabla Libro
CREATE TABLE Libro (
    id_libro INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(150) NOT NULL,
    autor VARCHAR(100) NOT NULL,
    id_categoria INT NOT NULL,
    copias_totales INT NOT NULL,
    FOREIGN KEY (id_categoria) REFERENCES Categoria(id_categoria)
);

-- Crear tabla Prestamo
CREATE TABLE Prestamo (
    id_prestamo INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT NOT NULL,
    id_libro INT NOT NULL,
    fecha_prestamo DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
    fecha_devolucion DATE,
    FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario),
    FOREIGN KEY (id_libro) REFERENCES Libro(id_libro)
);

-- Crear tabla Multa
CREATE TABLE Multa (
    id_multa INT AUTO_INCREMENT PRIMARY KEY,
    id_prestamo INT NOT NULL,
    monto DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (id_prestamo) REFERENCES Prestamo(id_prestamo)
);

-- Crear tabla Historial
CREATE TABLE Historial (
    id_historial INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT NOT NULL,
    descripcion VARCHAR(255) NOT NULL,
    fecha DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES Usuario(id_usuario)
);

-- Insertar datos en las tablas
INSERT INTO Usuario (nombre, email) VALUES
('Juan Pérez', 'juan.perez@example.com'),
('María López', 'maria.lopez@example.com'),
('Carlos García', 'carlos.garcia@example.com'),
('Ana Fernández', 'ana.fernandez@example.com');

INSERT INTO Categoria (nombre_categoria) VALUES
('Ficción'), ('No Ficción'), ('Ciencia'), ('Historia');

INSERT INTO Libro (nombre, autor, id_categoria, copias_totales) VALUES
('El Quijote', 'Miguel de Cervantes', 1, 7),
('Cien Años de Soledad', 'Gabriel García Márquez', 1, 4),
('Breve Historia del Tiempo', 'Stephen Hawking', 3, 3),
('Sapiens', 'Yuval Noah Harari', 2, 5),
('Historia de la Humanidad', 'José Luis', 4, 6);

-- Préstamos para Juan Pérez (id_usuario = 1)
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo, fecha_devolucion) 
VALUES (1, 1, DATE_SUB(CURDATE(), INTERVAL 20 DAY), DATE_SUB(CURDATE(), INTERVAL 15 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo, fecha_devolucion) 
VALUES (1, 2, DATE_SUB(CURDATE(), INTERVAL 18 DAY), DATE_SUB(CURDATE(), INTERVAL 10 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (1, 1, DATE_SUB(CURDATE(), INTERVAL 10 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (1, 2, DATE_SUB(CURDATE(), INTERVAL 8 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (1, 3, DATE_SUB(CURDATE(), INTERVAL 7 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (1, 4, DATE_SUB(CURDATE(), INTERVAL 6 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (1, 5, DATE_SUB(CURDATE(), INTERVAL 5 DAY));

-- Préstamos para María López (id_usuario = 2)
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo, fecha_devolucion) 
VALUES (2, 3, DATE_SUB(CURDATE(), INTERVAL 15 DAY), DATE_SUB(CURDATE(), INTERVAL 12 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (2, 4, DATE_SUB(CURDATE(), INTERVAL 9 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (2, 5, DATE_SUB(CURDATE(), INTERVAL 8 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (2, 1, DATE_SUB(CURDATE(), INTERVAL 7 DAY));

-- Préstamos para Carlos García (id_usuario = 3)
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo, fecha_devolucion) 
VALUES (3, 4, DATE_SUB(CURDATE(), INTERVAL 10 DAY), DATE_SUB(CURDATE(), INTERVAL 8 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (3, 2, DATE_SUB(CURDATE(), INTERVAL 10 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (3, 3, DATE_SUB(CURDATE(), INTERVAL 9 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (3, 4, DATE_SUB(CURDATE(), INTERVAL 8 DAY));

-- Préstamos para Ana Fernández (id_usuario = 4)
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (4, 5, DATE_SUB(CURDATE(), INTERVAL 12 DAY));
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (4, 1, DATE_SUB(CURDATE(), INTERVAL 11 DAY));

-- Adicionales
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (2, 3, DATE_SUB(CURDATE(), INTERVAL 5 DAY)); -- María López
INSERT INTO Prestamo (id_usuario, id_libro, fecha_prestamo) 
VALUES (3, 4, DATE_SUB(CURDATE(), INTERVAL 7 DAY)); -- Carlos García


INSERT INTO Multa (id_prestamo, monto) VALUES (2, 1000);
INSERT INTO Multa (id_prestamo, monto) VALUES (3, 4000);
INSERT INTO Multa (id_prestamo, monto) VALUES (4, 2000);
INSERT INTO Multa (id_prestamo, monto) VALUES (5, 1000);
INSERT INTO Multa (id_prestamo, monto) VALUES (9, 3000);
INSERT INTO Multa (id_prestamo, monto) VALUES (10, 2000);
INSERT INTO Multa (id_prestamo, monto) VALUES (11, 1000);
INSERT INTO Multa (id_prestamo, monto) VALUES (13, 4000);
INSERT INTO Multa (id_prestamo, monto) VALUES (14, 3000);
INSERT INTO Multa (id_prestamo, monto) VALUES (15, 2000);
INSERT INTO Multa (id_prestamo, monto) VALUES (16, 6000);
INSERT INTO Multa (id_prestamo, monto) VALUES (17, 5000);
INSERT INTO Multa (id_prestamo, monto) VALUES (19, 1000);


INSERT INTO Historial (id_usuario, descripcion, fecha) 
VALUES (1, 'Préstamo de El Quijote', DATE_SUB(CURDATE(), INTERVAL 20 DAY));
INSERT INTO Historial (id_usuario, descripcion, fecha) 
VALUES (2, 'Préstamo de Breve Historia del Tiempo', DATE_SUB(CURDATE(), INTERVAL 15 DAY));
INSERT INTO Historial (id_usuario, descripcion, fecha) 
VALUES (3, 'Préstamo de Sapiens', DATE_SUB(CURDATE(), INTERVAL 10 DAY));
INSERT INTO Historial (id_usuario, descripcion, fecha) 
VALUES (4, 'Préstamo de Historia de la Humanidad', DATE_SUB(CURDATE(), INTERVAL 5 DAY));

-- 1
SELECT 
    u.nombre AS usuario,
    COUNT(p.id_prestamo) AS total_prestamos
FROM 
    Prestamo p
JOIN 
    Usuario u ON p.id_usuario = u.id_usuario
WHERE 
    MONTH(p.fecha_prestamo) = 12 AND YEAR(p.fecha_prestamo) = 2024
GROUP BY 
    u.nombre
HAVING 
    COUNT(p.id_prestamo) > 2
ORDER BY 
    total_prestamos DESC;

-- 2
SELECT 
    l.nombre AS libro,
    l.autor AS autor,
    l.copias_totales AS copias
FROM 
    Libro l
JOIN 
    Categoria c ON l.id_categoria = c.id_categoria
WHERE 
    c.nombre_categoria = 'Ficción' AND l.copias_totales < 5;
    
-- 3
SELECT 
    u.nombre AS usuario,
    COUNT(m.id_multa) AS cantidad_prestamos_con_multa,
    SUM(m.monto) AS monto_total_adeudado
FROM 
    Multa m
JOIN 
    Prestamo p ON m.id_prestamo = p.id_prestamo
JOIN 
    Usuario u ON p.id_usuario = u.id_usuario
GROUP BY 
    u.nombre;
    
    
-- 3
SELECT 
	l.nombre AS libro,
	l.autor AS autor,
	COUNT(p.id_prestamo) AS veces_prestado
FROM 
    Prestamo p
JOIN 
    Libro l ON p.id_libro = l.id_libro
WHERE 
    MONTH(p.fecha_prestamo) = 12 AND YEAR(p.fecha_prestamo) = 2024
GROUP BY 
    l.nombre, l.autor
ORDER BY 
    veces_prestado DESC
LIMIT 3;

-- 4 
SELECT 
    l.nombre AS libro,
    l.autor AS autor,
    COUNT(*) AS veces_prestado
FROM 
    Prestamo p
JOIN 
    Libro l ON p.id_libro = l.id_libro
WHERE 
    p.fecha_prestamo BETWEEN '2024-12-01' AND '2024-12-31'
GROUP BY 
    l.nombre, l.autor
ORDER BY 
    veces_prestado DESC
LIMIT 3;



-- 5
SELECT 
    COUNT(m.id_multa) AS numero_multas,
    SUM(m.monto) AS monto_total_recaudado
FROM 
    Multa m
JOIN 
    Prestamo p ON m.id_prestamo = p.id_prestamo
WHERE 
    p.fecha_prestamo BETWEEN '2024-12-01' AND '2024-12-31';